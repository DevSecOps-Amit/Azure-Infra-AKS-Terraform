name: "Terraform-AKS-Deployment"

on:
  push:
    branches: [ "main" ]
  pull_request:

jobs:
  terraform:
    name: "Terraform Apply"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          # AZURE_CREDENTIALS secret = JSON (clientId, clientSecret, subscriptionId, tenantId)

      - name: Terraform Init
        working-directory: ./Terraform-Code
        run: terraform init

      - name: Terraform Validate
        working-directory: ./Terraform-Code
        run: terraform validate

      - name: Terraform Plan
        working-directory: ./Terraform-Code
        run: terraform plan -input=false

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        working-directory: ./Terraform-Code
        run: terraform apply -auto-approve -input=false

  deploy:
    name: "Deploy Manifests to AKS"
    runs-on: ubuntu-latest
    needs: terraform
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS Context
        uses: azure/aks-set-context@v3
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          cluster-name: myAKSCluster          # ← apne AKS ka naam yaha daalo
          resource-group: myResourceGroup     # ← apne RG ka naam yaha daalo

      - name: Deploy Kubernetes Manifests
        run: |
          kubectl apply -f Manifest/Deployment-Statefulset/
          kubectl apply -f Manifest/Pod-NS-Policy/
          kubectl apply -f Manifest/PV-PVC/
          kubectl apply -f Manifest/Sceduling/
          kubectl apply -f Manifest/StorageClass/
